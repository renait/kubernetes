# Default values for gitlab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gitlab/gitlab-ee
  tag: latest
  pullPolicy: IfNotPresent

## For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
## For Kubernetes v1.14, use 'networking.k8s.io/v1beta1'
networkPolicyApiVersion: networking.k8s.io/v1beta1

## chart defaults to using an ingress for http, but change to LoadBalancer if using you cluster supports it
service:
  http:
    type: ClusterIP
    port: 8080
    #nodePort: 30280
    # sometimes if is necesary to access through an external port i.e. http(s)://<dns-name>:<external-port>
    externalPort: 8280
    externalHost: gitlab.renait.nl
  ssh:
    type: ClusterIP
    port: 22
    #nodePort: 30222
    ## if serving on a different external port used for determining the ssh url in the gui
    externalPort: 2222
    #externalHost: git.example.com

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
    #nginx.ingress.kubernetes.io/proxy-body-size: "512m"
    #nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
    #nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  path: /
  hosts:
    - gitlab.renait.nl
  tls:
    # - secretName: renait-prod
    #  hosts:
    #    - gitlab.renait.nl

# Enter contents of the GITLAB_OMNIBUS_COINFIG env variable
#gitlabOmnibusConfiguration: |-
#  nginx['listen_port'] = 80;
#  nginx['listen_https'] = false;
#  external_url 'https://gitlab.example.com/';
#  gitlab_rails['initial_root_password'] = 'geheim';
gitlabOmnibusConfiguration:
#  nginx['listen_port'] = 80;
#  nginx['listen_https'] = false;
#  external_url 'https://gitlab.renait.nl/';
#  gitlab_rails['initial_root_password'] = 'S5jWiLJzBiQPFT';
#  gitlab_rails['initial_shared_runners_registration_token'] = 'sqnoiCDU6Ga2HP';
#  gitlab_rails['gitlab_shell_ssh_port'] = 30222;
#  gitlab_rails['gitlab_signup_enabled'] = true;
#  postgresql['enable'] = false;
#  gitlab_rails['db_host'] = ENV['DB_HOST'];
#  gitlab_rails['db_password'] = ENV['DB_PASSWORD'];
#  gitlab_rails['db_username'] = ENV['DB_USER'];
#  gitlab_rails['db_database'] = ENV['DB_DATABASE'];
#  redis['enable'] = false;
#  gitlab_rails['redis_host'] = ENV['REDIS_HOST'];
#  gitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];
#  grafana['enable'] = false;
#  prometheus['enable'] = false;

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  data:
    ## openproject data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim: gitlab-data

    accessMode: ReadWriteOnce
    size: 8Gi

  config:
    ## openproject data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim: gitlab-config

    accessMode: ReadWriteOnce
    size: 1Gi

  logs:
    ## openproject data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim: gitlab-logs

    accessMode: ReadWriteOnce
    size: 2Gi

postgresql:
  # Set to true to use external postgresql db
  enabled: false

  image:
    # recommended version is 9.6 (used for development and testing by GitLab)
    tag: 10.9.0

  ## These parameters must be specified. They are used to build up the DATABASE_URL env variable
  ## Create a database user
  postgresqlUsername: gitlab
  ## Create a database password. Generate default if none given
  postgresqlPassword:
  ## Create a database
  postgresqlDatabase: gitlab

  postgresqlConfiguration:
    listenAddresses: "'*'"
    maxConnections: 100
    sharedBuffers: 128MB
    dynamicSharedMemoryType: posix
    defaultTextSearchConfig: "'pc_catalog.english'"

  ## initdb scripts
  ## Specify dictionary of scripts to be run at first boot
  ## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
  initdbScripts:
    gitlab_init_db.sql: |-
      CREATE EXTENSION pg_trgm;

#  pgHbaConfiguration: |-
#    local all all trust
#    host all all 127.0.0.1/32 trust
#    host all all ::1/128 trust
#    host all all all md5

  ## Persist data to a persistent volume
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    size: 8Gi
    subPath: pgsql

    # annotations: {}

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

redis:
  # Set to true to use external redis
  enabled: false

  ## Cluster settings
  cluster:
    enabled: false

  master:
    persistence:
      size: 8Gi
      subPath: redis

  ## Redis Master resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

livenessProbe:
  enabled: true
  port: http
  settings:
    # This pod takes a very long time to start up. Be cautious when
    # lowering this value to avoid Pod death during startup.
    initialDelaySeconds: 200
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10

readinessProbe:
  enabled: true
  port: http
  settings:
    initialDelaySeconds: 120
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 4Gi

nodeSelector: {}

tolerations: []

affinity: {}
