## Docker openproject image version
## ref: https://store.docker.com/community/images/openproject/community/tags
##
image:
  registry: docker.io
  repository: openproject/community
  tag: 10
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

## For Kubernetes v1.4, v1.5 and v1.6, use 'networking.k8s.io/v1beta1'
## For Kubernetes v1.7, use 'networking.k8s.io/v1'
networkPolicyApiVersion: networking.k8s.io/v1

## Allowing use of ingress controllers
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
  servicePort: http
  annotations:
    # kubernetes.io/ingress.class: nginx
    # ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/24,172.10.0.1"
  tls:
    # - secretName: openproject.cluster.local
    #   hosts:
    #     - openproject.cluster.local

env:
  # - name: EMAIL_DELIVERY_METHOD
  #   value: "smtp"
  # - name: SMTP_ADDRESS
  #   value: "smtp.sendgrid.net"
  # - name: SMTP_PORT
  #   value: "587"
  # - name: SMTP_DOMAIN
  #   value: "my.domain.com"
  # - name: SMTP_AUTHENTICATION
  #   value: "login"
  # - name: SMTP_ENABLE_STARTTLS_AUTO
  #   value: "true"
  # - name: SMTP_USER_NAME
  #   value: "apikey"
  # - name: SMTP_PASSWORD
  #   value: "secret"

## openproject host to create application URLs
## ref: https://github.com/bitnami/bitnami-docker-openproject#configuration
##
# openprojectHost:

## Application password
## Defaults to a random 30-character alphanumeric string if not set
##
# openprojectPassword:

##
## External database configuration
##
externalDatabase:
  ## Database URL
  url:
  # url: postgres://user:password@host:5432/dbname

postgresql:
  enabled: true

  image.tag: 9.6

  ## These parameters must be specified. They are used to build up the DATABASE_URL env variable
  ## Create a database user
  postgresqlUsername: openproject
  ## Create a database password
  postgresqlPassword: secret
  ## Create a database
  postgresqlDatabase: openproject

  ## Persist data to a persistent volume
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 2Gi
    subPath: "data"
    mountPath: /bitnami/postgresql

    # annotations: {}

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
serviceType: LoadBalancer

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  openproject:
    ## openproject data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    accessMode: ReadWriteOnce
    size: 8Gi

  logs:
    ## log data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    accessMode: ReadWriteOnce
    size: 1Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m
