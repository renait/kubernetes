apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "plex.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "plex.name" . }}
    helm.sh/chart: {{ include "plex.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "plex.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "plex.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: TZ
          value: "{{ .Values.timezone }}"
        - name: PLEX_CLAIM
          value: "{{ .Values.plexClaim }}"
        - name: CHANGE_CONFIG_DIR_OWNERSHIP
          value: "{{ .Values.changeConfigDirOwnership }}"
        - name: PLEX_GID
          value: "{{ .Values.plexGid }}"
        - name: PLEX_UID
          value: "{{ .Values.plexUid }}"
        - name: ALLOWED_NETWORKS
          value: "{{ .Values.allowedNetworks }}"
        ports:
          - name: pms
            containerPort: 32400
          - name: https
            containerPort: 32443
        livenessProbe:
          httpGet:
            path: /identity
            port: 32400
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /identity
            port: 32400
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: data
          mountPath: /data
{{- if .Values.persistence.data.subPath }}
          subPath: {{ .Values.persistence.data.subPath }}
{{ end }}
        - name: config
          mountPath: /config
{{- if .Values.persistence.config.subPath }}
          subPath: {{ .Values.persistence.config.subPath }}
{{ end }}
        - name: transcode
          mountPath: /transcode
{{- if .Values.persistence.transcode.subPath }}
          subPath: {{ .Values.persistence.transcode.subPath }}
{{ end }}
        - name: shared
          mountPath: /shared
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: data
        persistentVolumeClaim:
{{- if .Values.persistence.data.claimName }}
          claimName: "{{ .Values.persistence.data.claimName }}"
{{- else }}
          claimName: "{{ template "plex.fullname" . }}-data"
{{- end }}
      - name: config
        persistentVolumeClaim:
{{- if .Values.persistence.config.claimName }}
          claimName: "{{ .Values.persistence.config.claimName }}"
{{- else }}
          claimName: "{{ template "plex.fullname" . }}-config"
{{- end }}
      - name: transcode
{{- if .Values.persistence.transcode.enabled }}
        persistentVolumeClaim:
{{- if .Values.persistence.transcode.claimName }}
          claimName: "{{ .Values.persistence.transcode.claimName }}"
{{- else }}
          claimName: "{{ template "plex.fullname" . }}-transcode"
{{- end }}
{{- else }}
        emptyDir: {}
{{- end }}
      - name: shared
        emptyDir: {}

