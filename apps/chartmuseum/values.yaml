env:
  open:
    # storage backend, can be one of: local, alibaba, amazon, google, microsoft
    STORAGE: local
    # disable all routes prefixed with /api
    DISABLE_API: false
    # allow chart versions to be re-uploaded
    ALLOW_OVERWRITE: true
    # allow anonymous GET operations when auth is used
    AUTH_ANONYMOUS_GET: false

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 80m
    memory: 64Mi

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 2Gi
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: chartmuseum

  ## Chartmuseum data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

## Ingress for load balancer
ingress:
  enabled: true
## Chartmuseum Ingress labels
##
#   labels:
#     dns: "route53"

## Chartmuseum Ingress annotations
##
  annotations:
    kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"

## Chartmuseum Ingress hostnames
## Must be provided if Ingress is enabled
##
#   hosts:
#     chartmuseum.domain.com:
#         - /charts
#         - /index.yaml
  hosts:
    - name: chartmuseum.explorer
      path: /
      tls: false

## Chartmuseum Ingress TLS configuration
## Secrets must be manually created in the namespace
##
#   tls:
#   - secretName: chartmuseum-server-tls
#     hosts:
#     - chartmuseum.domain.com


