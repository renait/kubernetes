# Depending on which DNS solution you have installed in your cluster enable the right exporter
coreDns:
  enabled: true
  service:
    selector:
      k8s-app: kube-dns
      
kubeDns:
  enabled: false

## Component scraping the kube controller manager
##
kubeControllerManager:
  enabled: true

  ## If using kubeControllerManager.endpoints only the port and targetPort are used
  ##
  service:
    selector:
      component: kube-controller-manager

## Component scraping etcd
##
kubeEtcd:
  enabled: true

  ## Etcd service. If using kubeEtcd.endpoints only the port and targetPort are used
  ##
  service:
    selector:
      component: etcd

## Component scraping kube scheduler
##
kubeScheduler:
  enabled: true

  ## If using kubeScheduler.endpoints only the port and targetPort are used
  ##
  service:
    selector:
      component: kube-scheduler

alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 8Gi

prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 8Gi

grafana:
  adminPassword: "R2d2C3p0"
  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/issuer: ca-kubernetes-issuer
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - k8s-grafana.explorer
    tls:
      - secretName: grafana-tls
        hosts:
        - k8s-grafana.explorer
  persistence:
    enabled: true
    accessModes: ["ReadWriteOnce"]
    size: 2Gi
